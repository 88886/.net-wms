//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.CompactFramework.Design.Data 2.0.50727.5485 版自动生成。
// 
namespace BenQGuru.eMES.WinCeClient.IQCCommand {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IQCCommandSoap", Namespace="http://tempuri.org/")]
    public partial class IQCCommand : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public IQCCommand() {
            this.Url = "http://112.74.38.84/mestest/BenQGuru.eMES.Web.WebService/IQCCommand.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCommand(string no, string status, string invNo, string user) {
            object[] results = this.Invoke("GetCommand", new object[] {
                        no,
                        status,
                        invNo,
                        user});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCommand(string no, string status, string invNo, string user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCommand", new object[] {
                        no,
                        status,
                        invNo,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetCommand(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelDownCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelDownCommand(string[] asns) {
            object[] results = this.Invoke("CancelDownCommand", new object[] {
                        asns});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelDownCommand(string[] asns, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelDownCommand", new object[] {
                        asns}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCancelDownCommand(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FirstCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FirstCheck(string[] asns, out string message) {
            object[] results = this.Invoke("FirstCheck", new object[] {
                        asns});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFirstCheck(string[] asns, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FirstCheck", new object[] {
                        asns}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndFirstCheck(System.IAsyncResult asyncResult, out string message) {
            object[] results = this.EndInvoke(asyncResult);
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FirstCheckWithUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FirstCheckWithUser(string[] asns, string userCode, out string message) {
            object[] results = this.Invoke("FirstCheckWithUser", new object[] {
                        asns,
                        userCode});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFirstCheckWithUser(string[] asns, string userCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FirstCheckWithUser", new object[] {
                        asns,
                        userCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndFirstCheckWithUser(System.IAsyncResult asyncResult, out string message) {
            object[] results = this.EndInvoke(asyncResult);
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateASNStatusForIQC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ValidateASNStatusForIQC(string[] asns) {
            object[] results = this.Invoke("ValidateASNStatusForIQC", new object[] {
                        asns});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateASNStatusForIQC(string[] asns, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateASNStatusForIQC", new object[] {
                        asns}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndValidateASNStatusForIQC(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateASNSTTypeForIQC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ValidateASNSTTypeForIQC(string[] asns) {
            object[] results = this.Invoke("ValidateASNSTTypeForIQC", new object[] {
                        asns});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateASNSTTypeForIQC(string[] asns, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateASNSTTypeForIQC", new object[] {
                        asns}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndValidateASNSTTypeForIQC(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveIQCInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveIQCInfo(string[] asns, string usrCode) {
            object[] results = this.Invoke("SaveIQCInfo", new object[] {
                        asns,
                        usrCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveIQCInfo(string[] asns, string usrCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveIQCInfo", new object[] {
                        asns,
                        usrCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSaveIQCInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
