//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.CompactFramework.Design.Data 2.0.50727.5485 版自动生成。
// 
namespace BenQGuru.eMES.WinCeClient.PickDone {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PickDoneSoap", Namespace="http://tempuri.org/")]
    public partial class PickDone : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public PickDone() {
            this.Url = "http://112.74.38.84/mestest/BenQGuru.eMES.Web.WebService/PickDone.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndHelloWorld(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PickNOQueryGrid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PickNOQueryGrid(string PickNo) {
            object[] results = this.Invoke("PickNOQueryGrid", new object[] {
                        PickNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPickNOQueryGrid(string PickNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PickNOQueryGrid", new object[] {
                        PickNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndPickNOQueryGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitButton", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitButton(string PickNo, string CartonNo, string Number, string SN, string UserCode, bool IsAll, bool Check, out string message) {
            object[] results = this.Invoke("SubmitButton", new object[] {
                        PickNo,
                        CartonNo,
                        Number,
                        SN,
                        UserCode,
                        IsAll,
                        Check});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSubmitButton(string PickNo, string CartonNo, string Number, string SN, string UserCode, bool IsAll, bool Check, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SubmitButton", new object[] {
                        PickNo,
                        CartonNo,
                        Number,
                        SN,
                        UserCode,
                        IsAll,
                        Check}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSubmitButton(System.IAsyncResult asyncResult, out string message) {
            object[] results = this.EndInvoke(asyncResult);
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApplyButton", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApplyButton(string PickNo, string PickLine, string UserCode) {
            object[] results = this.Invoke("ApplyButton", new object[] {
                        PickNo,
                        PickLine,
                        UserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApplyButton(string PickNo, string PickLine, string UserCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApplyButton", new object[] {
                        PickNo,
                        PickLine,
                        UserCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndApplyButton(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInOutRule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetInOutRule(string DQMCode, string PickNo) {
            object[] results = this.Invoke("GetInOutRule", new object[] {
                        DQMCode,
                        PickNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInOutRule(string DQMCode, string PickNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInOutRule", new object[] {
                        DQMCode,
                        PickNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetInOutRule(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PickedView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PickedView(string PickNo, string DQMCode) {
            object[] results = this.Invoke("PickedView", new object[] {
                        PickNo,
                        DQMCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPickedView(string PickNo, string DQMCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PickedView", new object[] {
                        PickNo,
                        DQMCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndPickedView(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPickNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] QueryPickNo(string user) {
            object[] results = this.Invoke("QueryPickNo", new object[] {
                        user});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryPickNo(string user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryPickNo", new object[] {
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndQueryPickNo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKeyPartsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetKeyPartsInfo(string CartonNo) {
            object[] results = this.Invoke("GetKeyPartsInfo", new object[] {
                        CartonNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetKeyPartsInfo(string CartonNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetKeyPartsInfo", new object[] {
                        CartonNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetKeyPartsInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckInOutRule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckInOutRule(string PickNo, string CartonNo, string Number, string SN, bool IsAll, bool Check) {
            object[] results = this.Invoke("CheckInOutRule", new object[] {
                        PickNo,
                        CartonNo,
                        Number,
                        SN,
                        IsAll,
                        Check});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckInOutRule(string PickNo, string CartonNo, string Number, string SN, bool IsAll, bool Check, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckInOutRule", new object[] {
                        PickNo,
                        CartonNo,
                        Number,
                        SN,
                        IsAll,
                        Check}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCheckInOutRule(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClosePickButton", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClosePickButton(string pickno, string UserCode) {
            object[] results = this.Invoke("ClosePickButton", new object[] {
                        pickno,
                        UserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClosePickButton(string pickno, string UserCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ClosePickButton", new object[] {
                        pickno,
                        UserCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndClosePickButton(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInvoicesDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetInvoicesDetails(string pickNo, string dqmcode) {
            object[] results = this.Invoke("GetInvoicesDetails", new object[] {
                        pickNo,
                        dqmcode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInvoicesDetails(string pickNo, string dqmcode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInvoicesDetails", new object[] {
                        pickNo,
                        dqmcode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetInvoicesDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
    }
}
